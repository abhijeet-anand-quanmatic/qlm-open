[project]
name = "poc-template"
description = "Template for PoC project."
version = "0.0.1"
authors = [
    { name = "Yosuke Mukasa", email = "yosuke.mukasa@quanmatic.com" },
]
dependencies = [
    # Optimization and Ising/QUBO formulation
    "amplify[extra]>=1.1.1",
    "simanneal>=0.5.0",

    # Data
    "pandas>=2.2.2",
    "python-dotenv>=1.0.1",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.5.2",

    # Jupiter Notebook
    "jupyter>=1.0.0",
    "jupyterlab>=4.2.2",
    "ipympl>=0.9.4",
    "tqdm>=4.66.4",

    # Visualization
    "matplotlib>=3.9.1",
    "japanize-matplotlib>=1.1.3",

]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "Proprietary" }

[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"

[tool.pdm]
version = { source = "file", path = "src/__init__.py" }

[tool.pdm.dev-dependencies]
# Fix all dev dependencies versions for consistency.
dev = [
    "pyright==1.1.367",
    "pytest==8.3.3",
    "pytest-cov==5.0.0",
    "ruff==0.4.8",
    "pytest-mock>=3.14.0",
]

[tool.pdm.scripts]
pyright = "pyright ./src"
pyright_test = "pyright ./tests"
ruff_lint = "ruff check ./src"
ruff_lint_test = "ruff check ./tests"
ruff_format = "ruff format ./src"
ruff_format_test = "ruff format ./tests"
test = "pytest ./tests"
format = { composite = ["ruff_format", "ruff_format_test"] }
lint = { composite = [
    "ruff_lint",
    "ruff_lint_test",
    "pyright",
    "pyright_test",
] }
check = { composite = ["format", "lint", "test"] }

[tool.pytest.ini_options]
filterwarnings = ["ignore::FutureWarning"]
addopts = "--cov=src"

[tool.coverage.run]
omit = ["*/__init__.py"]

[tool.ruff]
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "Q",  # flake8-quotes
    "UP", # pyupgrade
    "W",  # pycodestyle
]
ignore = ["E501"]
# E501 Line too long

[tool.pyright]
pythonVersion = "3.12"
extraPaths = ["__pypackages__/3.12/lib/"]
